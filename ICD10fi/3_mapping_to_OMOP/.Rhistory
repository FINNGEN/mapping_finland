icd10fi_extended_by_group
new_icd10fi_extended_by_group <- left_join(icd10fi_extended_by_group,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_group
all_codes_tmp
all_codes_tmp <- bind_rows(
ICD10fi %>% rename(CODE1=`A:Koodi1`, CODE2=`A:Koodi2`)  %>%
mutate(orginal=TRUE) %>%
select(CodeId, CODE1, CODE2),
new_icd10fi_extended_by_one_code %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = value) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
new_icd10fi_extended_by_group %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = CodeId2) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
)
all_codes_tmp
all_codes_tmp <- bind_rows(
ICD10fi %>% rename(CODE1=`A:Koodi1`, CODE2=`A:Koodi2`)  %>%
mutate(orginal=TRUE) %>%
select(CodeId, CODE1, CODE2),
new_icd10fi_extended_by_one_code %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = value) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
new_icd10fi_extended_by_group %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = CodeId2) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
)
all_codes_tmp
freq_icd10fi_finngen <- read_csv("../1_source_codes_freq/freq_ICD10fi_finngen.csv", ) %>% select(-X1)
n_events_finngen <- freq_icd10fi_finngen$freq_finngen %>% sum()
finngen_join <- left_join(freq_icd10fi_finngen,
all_codes_tmp %>% mutate(is=TRUE, CODE1=str_replace(CODE1, "\\.", ""), CODE2=str_replace(CODE2, "\\.", ""))
, by = c("CODE1", "CODE2"))
no_finngen_standard <- finngen_join %>% filter(is.na(is)) %>% select(CodeId, CODE1,  CODE2, n_codes) %>%
mutate( freq_finngen_per=percent(n_codes/n_events_finngen))
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>% arrange(-n_codes)
freq_icd10fi_finngen <- read_csv("../1_source_codes_freq/freq_ICD10fi_finngen.csv", ) %>% select(-X1)
freq_icd10fi_finngen <- freq_icd10fi_finngen %>%
rename(freq_finngen = n_codes) %>%
mutate(CODE1 = str_replace(CODE1,"\\+|\\*|\\#|\\&", ""), CODE2 = str_replace(CODE2,"\\+|\\*|\\#|\\&", "")) %>%
# if same code sum freqs
group_by(CODE1, CODE2) %>% summarise(freq_finngen=sum(freq_finngen),  n_patients=sum(n_patients)) %>% ungroup()
n_events_finngen <- freq_icd10fi_finngen$freq_finngen %>% sum()
finngen_join <- left_join(freq_icd10fi_finngen,
all_codes_tmp %>% mutate(is=TRUE, CODE1=str_replace(CODE1, "\\.", ""), CODE2=str_replace(CODE2, "\\.", ""))
, by = c("CODE1", "CODE2"))
no_finngen_standard <- finngen_join %>% filter(is.na(is)) %>% select(CodeId, CODE1,  CODE2, n_codes) %>%
mutate( freq_finngen_per=percent(n_codes/n_events_finngen))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(scales)
library(stringdist)
ICD10fi <- read_delim("./58_1471433699473.txt", ";",
locale = locale(encoding = 'ISO-8859-1'),
col_types = cols( .default = col_character() )
)
icd10fi_expansion_description <- ICD10fi %>%
filter(!is.na(`A:Yhdistelymerkki`)) %>%
filter(!str_detect(CodeId,"[:digit:]$")) %>% #dont end with mark
filter(str_detect(`ALONG:Huom.`, "[:upper:][:digit:][:digit:]")) %>%
filter(str_detect(`ALONG:Huom.`, "tiologi")) %>%
arrange(`ALONG:Huom.`) %>%
select(CodeId,`ALONG:Huom.`)
icd10fi_expansion_description
#code
icd10fi_extended_by_one_code <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "koodik") & !str_detect(`ALONG:Huom.`, "Lisäksi")) %>%
mutate(codes_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(codes_text = str_replace(codes_text, "(.*)\\s-\\s.*", "\\1")) %>%
# tai to ,
mutate_at(vars(codes_text), str_replace_all,"\\stai\\s", "|")
icd10fi_extended_by_one_code <- icd10fi_extended_by_one_code %>%
mutate(code2 = map(codes_text, ~{str_split(.,"\\|") %>% unlist() %>% as_tibble()})) %>% unnest(code2) %>%
mutate(new_CodeId = str_c(CodeId, value))
icd10fi_extended_by_one_code
new_icd10fi_extended_by_one_code <- left_join(icd10fi_extended_by_one_code,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_one_code
range_to_regex <- function(match){
range <- str_extract_all(match, "[:digit:][:digit:]") %>% unlist() %>% as.integer()
match <- range[1]:range[2] %>% as.character() %>% if_else(nchar(.)==1, str_c("0",.),.) %>% str_c(collapse = "|")
return(str_c("(",match,")"))
}
#group
icd10fi_extended_by_group <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "luokasta|luvusta|ryhmistä|ryhmästä|rymistä")) %>%
#extract codes
mutate(group_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\s-\\s.*", "\\1")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\.\\s.*", "\\1")) %>%
#extract negations
mutate(group_text_ei = str_extract(group_text, "\\(ei.*\\)")) %>%
mutate(group_text = str_remove(group_text, "\\s\\(ei.*\\)")) %>%
mutate(group_text_ei = str_replace(group_text_ei, "\\(ei\\s(.*)\\)", "\\1")) %>%
# tai to ,
mutate_at(vars(group_text, group_text_ei), str_replace_all, "\\stai\\sryhmistä\\s|\\stai\\sryhmästä\\s|,\\s|\\stai\\s", "|") %>%
# format as regex
mutate(group_reg=group_text, group_reg_ei=group_text_ei) %>%
mutate(group_reg = str_replace(group_reg, "C00-D", "C00-C99\\|D00-D")) %>%
mutate(group_reg = str_replace(group_reg, "A([:digit:][:digit:])-B", "A\\1-A99\\|B00-B")) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "-[:upper:]", "-" ) %>%
#mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "([:digit:][:digit:]-[:digit:][:digit:])", "\\[\\1\\]" ) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "\\|", "|^" ) %>%
mutate_at(vars(group_reg,group_reg_ei), ~{str_c("^",.)} ) %>%
mutate(group_reg = str_replace_all(group_reg, "[:digit:][:digit:]-[:digit:][:digit:]", range_to_regex)) %>%
mutate(group_reg_ei = str_replace_all(group_reg_ei, "50-53", "(50|51|52|53)"))%>%
#extract merkki
mutate(group_reg_4merkki = str_extract(`ALONG:Huom.`, "(\\.[:digit:])($|\\.$)")) %>%
mutate(group_reg_4merkki = str_replace(group_reg_4merkki, "\\.$", "")) %>%
mutate(group_reg_4merkki = str_c(group_reg_4merkki, "$") )
icd10fi_extended_by_group %>% select(group_text, group_reg, group_reg_ei, group_reg_4merkki) %>% print(n=300)
icd10fi_leaves <- ICD10fi %>%
filter(`A:Lehtisolmu`=="T" & is.na(`A:Yhdistelymerkki`))
icd10fi_extended_by_group <- icd10fi_extended_by_group %>% #slice(1)%>%
mutate(code2 = pmap(list(group_reg, group_reg_ei, group_reg_4merkki),
function(group_reg, group_reg_ei, group_reg_4merkki){
icd10fi_leaves %>% select(CodeId) %>%
filter(str_detect(CodeId, group_reg)) %>%
filter(is.na(group_reg_ei)      | !str_detect(CodeId, group_reg_ei)) %>%
filter(is.na(group_reg_4merkki) |  str_detect(CodeId, group_reg_4merkki)) %>%
rename(CodeId2 = CodeId)
})) %>% unnest(code2)  %>%
mutate(new_CodeId = str_c(CodeId, CodeId2))
icd10fi_extended_by_group
new_icd10fi_extended_by_group <- left_join(icd10fi_extended_by_group,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_group
all_codes_tmp <- bind_rows(
ICD10fi %>% rename(CODE1=`A:Koodi1`, CODE2=`A:Koodi2`)  %>%
mutate(orginal=TRUE) %>%
select(CodeId, CODE1, CODE2),
new_icd10fi_extended_by_one_code %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = value) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
new_icd10fi_extended_by_group %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = CodeId2) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
)
write_csv(all_codes_tmp, "./ICD10_extended.csv")
freq_icd10fi_finngen <- read_csv("../1_source_codes_freq/freq_ICD10fi_finngen.csv", ) %>% select(-X1)
freq_icd10fi_finngen <- freq_icd10fi_finngen %>%
rename(freq_finngen = n_codes) %>%
mutate(CODE1 = str_replace(CODE1,"\\+|\\*|\\#|\\&", ""), CODE2 = str_replace(CODE2,"\\+|\\*|\\#|\\&", "")) %>%
# if same code sum freqs
group_by(CODE1, CODE2) %>% summarise(freq_finngen=sum(freq_finngen),  n_patients=sum(n_patients)) %>% ungroup()
n_events_finngen <- freq_icd10fi_finngen$freq_finngen %>% sum()
finngen_join <- left_join(freq_icd10fi_finngen,
all_codes_tmp %>% mutate(is=TRUE, CODE1=str_replace(CODE1, "\\.", ""), CODE2=str_replace(CODE2, "\\.", ""))
, by = c("CODE1", "CODE2"))
no_finngen_standard <- finngen_join %>% filter(is.na(is)) %>% select(CodeId, CODE1,  CODE2, freq_finngen) %>%
mutate( freq_finngen_per=percent(freq_finngen/n_events_finngen))
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>% arrange(-n_codes)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>% arrange(-freq_finngen)
all_codes_tmp %>%filter( str_detect(CodeId, "N08.3"))
ICD10fi %>%filter( str_detect(CodeId, "N08.3"))
ICD10fi %>%filter( str_detect(CodeId, "N08\\.3\\*"))
ICD10fi %>%filter( str_detect(CodeId, "N08\\.3\\*")) %>% gather()
ICD10fi %>%filter( str_detect(CodeId, "N08\\.3\\*")) %>% gather() %>%  print(n=100)
no_finngen_standard %>% filter((CODE1 != CODE2) | (!is.na(CODE1)) | (is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter((!is.na(CODE1)) & (is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(!(!is.na(CODE1)) & (is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(!(!is.na(CODE1)) & (is.na(CODE2)) ) ) %>%
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(!((!is.na(CODE1)) & (is.na(CODE2)) ) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(! (!is.na(CODE1) & is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2)) %>%
filter(! (!is.na(CODE1) & is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2)) %>%
filter(!( (!is.na(CODE1) & is.na(CODE2))) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2)) %>%
#filter(!( (!is.na(CODE1) & is.na(CODE2))) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
#filter((CODE1 != CODE2)) %>%
#filter(!( (!is.na(CODE1) & is.na(CODE2))) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2)) %>%
#filter(!( (!is.na(CODE1) & is.na(CODE2))) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter(!(CODE1 == CODE2)) %>%
#filter(!( (!is.na(CODE1) & is.na(CODE2))) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
#filter(! (!is.na(CODE1) & is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>%
filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(! (is.na(CODE1) & !is.na(CODE2)) ) %>%
arrange(-freq_finngen)
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(! (is.na(CODE1) & !is.na(CODE2)) ) %>%
arrange(-freq_finngen)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(scales)
library(readxl)
icd10fi_standard_matched <- read_csv("./ICD10fi_matched_to_ICD10who.csv") %>%
mutate(ICD10who_match_level = factor(ICD10who_match_level,
levels = c("classification_code",
"match_exactly",
"match_one_code_removing_mark",
"match_longName",
"match_first_code",
"match_first_code_parent",
"match_first_code_grandparent",
"no_match")
)
freq_icd10fi_finngen <- read_csv("../1_source_codes_freq//freq_ICD10fi_finngen.csv", ) %>% select(-X1)
freq_icd10_tays <- read_csv("../1_source_codes_freq//freq_ICD10fi_tays.csv",
col_types = cols( .default = col_character() )) %>%
mutate( frequency = as.integer(frequency))
icd10_almost<-icd10fi_standard_matched %>%  filter(exists_in_ICD10who) %>%  filter(English_name_match_level>0) %>% select(CodeId, English_name, ICD10who_name,English_name_match_level ) %>% arrange(English_name_match_level)
write_csv(icd10_almost , "./same_icd10who_code_not_exactly_same_english_name.csv")
## icd10fi standard
#remove classification codes
icd10fi_standard_matched <- icd10fi_standard_matched %>%  filter(ICD10who_match_level!="classification_code")
# format them similarly
icd10fi_standard_matched <- icd10fi_standard_matched %>%
mutate(CODE1 = str_replace(Code1,"\\.", ""), CODE2 = str_replace(Code2,"\\.", ""))
#There is 11 that are repeated looking at code1 and code 2
duplicates_CodeId <- icd10fi_standard_matched %>%  count(Code1, Code2, sort = T) %>% filter(n>1) %>%  select(-n) %>%
inner_join(icd10fi_standard_matched, by=c("Code1", "Code2")) %>%
filter(Code1!=CodeId) %>% .$CodeId
#remove these
icd10fi_standard_matched <- icd10fi_standard_matched %>% filter(!(CodeId %in% duplicates_CodeId))
# finngen
freq_icd10fi_finngen <- freq_icd10fi_finngen %>%
rename(freq_finngen = n_codes) %>%
mutate(CODE1 = str_replace(CODE1,"\\+|\\*|\\#|\\&", ""), CODE2 = str_replace(CODE2,"\\+|\\*|\\#|\\&", "")) %>%
# if same code sum freqs
group_by(CODE1, CODE2) %>% summarise(freq_finngen=sum(freq_finngen),  n_patients=sum(n_patients)) %>% ungroup()
freq_icd10_tays <- freq_icd10_tays %>%  mutate(CODE1 = str_replace(dg, "([:alnum:]*)\\s([:alnum:]*)", "\\1")) %>%
mutate(CODE2 = if_else(str_detect(dg, "\\s"), str_replace(dg, "([:alnum:]*)\\s([:alnum:]*)", "\\2"), as.character(NA))) %>%
mutate(frequency = as.double(frequency)) %>%
rename(freq_tays = frequency) %>% select(CODE1, CODE2, freq_tays) %>%  distinct() %>%
group_by(CODE1, CODE2) %>% summarise(freq_tays=sum(freq_tays))%>% ungroup()
icd10fi_standard_matched  %>% count(ICD10who_match_level, exists_in_ICD10who)
n_events_finngen <- freq_icd10fi_finngen$freq_finngen %>% sum()
n_events_tays <- freq_icd10_tays$freq_tays %>% sum()
n_events_finngen
n_events_tays
finngen_join <- left_join(freq_icd10fi_finngen, icd10fi_standard_matched, by = c("CODE1", "CODE2"))
no_finngen_standard <- finngen_join %>% filter(is.na(ShortName)) %>% select(CodeId, ShortName, CODE1,  CODE2, freq_finngen) %>%
mutate( freq_finngen_per=percent(freq_finngen/n_events_finngen))
no_finngen_standard %>% filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(! (is.na(CODE1) & !is.na(CODE2)) ) %>%
arrange(-freq_finngen)
icd10fi_extended_by_group
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(scales)
library(stringdist)
ICD10fi <- read_delim("./58_1471433699473.txt", ";",
locale = locale(encoding = 'ISO-8859-1'),
col_types = cols( .default = col_character() )
)
icd10fi_expansion_description <- ICD10fi %>%
filter(!is.na(`A:Yhdistelymerkki`)) %>%
filter(!str_detect(CodeId,"[:digit:]$")) %>% #dont end with mark
filter(str_detect(`ALONG:Huom.`, "[:upper:][:digit:][:digit:]")) %>%
filter(str_detect(`ALONG:Huom.`, "tiologi")) %>%
arrange(`ALONG:Huom.`) %>%
select(CodeId,`ALONG:Huom.`)
icd10fi_expansion_description
#code
icd10fi_extended_by_one_code <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "koodik") & !str_detect(`ALONG:Huom.`, "Lisäksi")) %>%
mutate(codes_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(codes_text = str_replace(codes_text, "(.*)\\s-\\s.*", "\\1")) %>%
# tai to ,
mutate_at(vars(codes_text), str_replace_all,"\\stai\\s", "|")
icd10fi_extended_by_one_code <- icd10fi_extended_by_one_code %>%
mutate(code2 = map(codes_text, ~{str_split(.,"\\|") %>% unlist() %>% as_tibble()})) %>% unnest(code2) %>%
mutate(new_CodeId = str_c(CodeId, value))
icd10fi_extended_by_one_code
new_icd10fi_extended_by_one_code <- left_join(icd10fi_extended_by_one_code,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_one_code
range_to_regex <- function(match){
range <- str_extract_all(match, "[:digit:][:digit:]") %>% unlist() %>% as.integer()
match <- range[1]:range[2] %>% as.character() %>% if_else(nchar(.)==1, str_c("0",.),.) %>% str_c(collapse = "|")
return(str_c("(",match,")"))
}
#group
icd10fi_extended_by_group <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "luokasta|luvusta|ryhmistä|ryhmästä|rymistä")) %>%
#extract codes
mutate(group_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\s-\\s.*", "\\1")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\.\\s.*", "\\1")) %>%
#extract negations
mutate(group_text_ei = str_extract(group_text, "\\(ei.*\\)")) %>%
mutate(group_text = str_remove(group_text, "\\s\\(ei.*\\)")) %>%
mutate(group_text_ei = str_replace(group_text_ei, "\\(ei\\s(.*)\\)", "\\1")) %>%
# tai to ,
mutate_at(vars(group_text, group_text_ei), str_replace_all, "\\stai\\sryhmistä\\s|\\stai\\sryhmästä\\s|,\\s|\\stai\\s", "|") %>%
# format as regex
mutate(group_reg=group_text, group_reg_ei=group_text_ei) %>%
mutate(group_reg = str_replace(group_reg, "C00-D", "C00-C99\\|D00-D")) %>%
mutate(group_reg = str_replace(group_reg, "A([:digit:][:digit:])-B", "A\\1-A99\\|B00-B")) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "-[:upper:]", "-" ) %>%
#mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "([:digit:][:digit:]-[:digit:][:digit:])", "\\[\\1\\]" ) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "\\|", "|^" ) %>%
mutate_at(vars(group_reg,group_reg_ei), ~{str_c("^",.)} ) %>%
mutate(group_reg = str_replace_all(group_reg, "[:digit:][:digit:]-[:digit:][:digit:]", range_to_regex)) %>%
mutate(group_reg_ei = str_replace_all(group_reg_ei, "50-53", "(50|51|52|53)"))%>%
#extract merkki
mutate(group_reg_4merkki = str_extract(`ALONG:Huom.`, "(\\.[:digit:])($|\\.$)")) %>%
mutate(group_reg_4merkki = str_replace(group_reg_4merkki, "\\.$", "")) %>%
mutate(group_reg_4merkki = str_c(group_reg_4merkki, "$") )
icd10fi_extended_by_group %>% select(group_text, group_reg, group_reg_ei, group_reg_4merkki) %>% print(n=300)
icd10fi_extended_by_group
icd10fi_extended_by_group %>% filter(CodeId == "H36.00*")
ICD10fi %>% filter(CodeId == "H36.00*")
ICD10fi %>% filter(CodeId == "H36")
ICD10fi %>% filter(ParentId == "H36*")
ICD10fi %>% filter(ParentId == "H36*") %>% fitler(is.na(`A:Koodi2`))
ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`))
ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`)) %>%  select(CodeId)
a<-ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`)) %>%  select(CodeId)
b <- icd10fi_extended_by_group %>% filter(CodeId == "H36.00*")
full_join(a,b)
full_join(a,b, copy=T)
full_join(a,b, by="CodeId", copy=T)
a
b
b %>%  mutate(CodeId = a)
b %>%  mutate(tmp = a)
b %>%  mutate(tmp = as.tibble(a))
b$CodeId[1]
b$CodeId[1] = a
b
b %>%  unnest(CodeId)
a<-ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`)) %>%  select(CodeId)
b <- icd10fi_extended_by_group %>% filter(CodeId == "H36.00*")
b$CodeId[1] = a
b <- b %>%  unnest(CodeId)
a<-ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`)) %>%  select(CodeId)
b <- icd10fi_extended_by_group %>% filter(CodeId == "H36.00*")
b$CodeId[1] = a
b <- b %>%  unnest(CodeId)
icd10fi_extended_by_group <- bind_rows(icd10fi_extended_by_group, b) %>%  distinct()
icd10fi_leaves <- ICD10fi %>%
filter(`A:Lehtisolmu`=="T" & is.na(`A:Yhdistelymerkki`))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(scales)
library(stringdist)
ICD10fi <- read_delim("./58_1471433699473.txt", ";",
locale = locale(encoding = 'ISO-8859-1'),
col_types = cols( .default = col_character() )
)
icd10fi_expansion_description <- ICD10fi %>%
filter(!is.na(`A:Yhdistelymerkki`)) %>%
filter(!str_detect(CodeId,"[:digit:]$")) %>% #dont end with mark
filter(str_detect(`ALONG:Huom.`, "[:upper:][:digit:][:digit:]")) %>%
filter(str_detect(`ALONG:Huom.`, "tiologi")) %>%
arrange(`ALONG:Huom.`) %>%
select(CodeId,`ALONG:Huom.`)
icd10fi_expansion_description
#code
icd10fi_extended_by_one_code <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "koodik") & !str_detect(`ALONG:Huom.`, "Lisäksi")) %>%
mutate(codes_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(codes_text = str_replace(codes_text, "(.*)\\s-\\s.*", "\\1")) %>%
# tai to ,
mutate_at(vars(codes_text), str_replace_all,"\\stai\\s", "|")
icd10fi_extended_by_one_code <- icd10fi_extended_by_one_code %>%
mutate(code2 = map(codes_text, ~{str_split(.,"\\|") %>% unlist() %>% as_tibble()})) %>% unnest(code2) %>%
mutate(new_CodeId = str_c(CodeId, value))
icd10fi_extended_by_one_code
new_icd10fi_extended_by_one_code <- left_join(icd10fi_extended_by_one_code,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_one_code
range_to_regex <- function(match){
range <- str_extract_all(match, "[:digit:][:digit:]") %>% unlist() %>% as.integer()
match <- range[1]:range[2] %>% as.character() %>% if_else(nchar(.)==1, str_c("0",.),.) %>% str_c(collapse = "|")
return(str_c("(",match,")"))
}
#group
icd10fi_extended_by_group <-
icd10fi_expansion_description %>% filter(str_detect(`ALONG:Huom.`, "luokasta|luvusta|ryhmistä|ryhmästä|rymistä")) %>%
#extract codes
mutate(group_text = str_extract(`ALONG:Huom.`, "[:upper:][:digit:][:digit:].*")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\s-\\s.*", "\\1")) %>%
mutate(group_text = str_replace(group_text, "(.*)\\.\\s.*", "\\1")) %>%
#extract negations
mutate(group_text_ei = str_extract(group_text, "\\(ei.*\\)")) %>%
mutate(group_text = str_remove(group_text, "\\s\\(ei.*\\)")) %>%
mutate(group_text_ei = str_replace(group_text_ei, "\\(ei\\s(.*)\\)", "\\1")) %>%
# tai to ,
mutate_at(vars(group_text, group_text_ei), str_replace_all, "\\stai\\sryhmistä\\s|\\stai\\sryhmästä\\s|,\\s|\\stai\\s", "|") %>%
# format as regex
mutate(group_reg=group_text, group_reg_ei=group_text_ei) %>%
mutate(group_reg = str_replace(group_reg, "C00-D", "C00-C99\\|D00-D")) %>%
mutate(group_reg = str_replace(group_reg, "A([:digit:][:digit:])-B", "A\\1-A99\\|B00-B")) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "-[:upper:]", "-" ) %>%
#mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "([:digit:][:digit:]-[:digit:][:digit:])", "\\[\\1\\]" ) %>%
mutate_at(vars(group_reg,group_reg_ei), str_replace_all, "\\|", "|^" ) %>%
mutate_at(vars(group_reg,group_reg_ei), ~{str_c("^",.)} ) %>%
mutate(group_reg = str_replace_all(group_reg, "[:digit:][:digit:]-[:digit:][:digit:]", range_to_regex)) %>%
mutate(group_reg_ei = str_replace_all(group_reg_ei, "50-53", "(50|51|52|53)"))%>%
#extract merkki
mutate(group_reg_4merkki = str_extract(`ALONG:Huom.`, "(\\.[:digit:])($|\\.$)")) %>%
mutate(group_reg_4merkki = str_replace(group_reg_4merkki, "\\.$", "")) %>%
mutate(group_reg_4merkki = str_c(group_reg_4merkki, "$") )
icd10fi_extended_by_group %>% select(group_text, group_reg, group_reg_ei, group_reg_4merkki) %>% print(n=300)
a<-ICD10fi %>% filter(ParentId == "H36*") %>% filter(is.na(`A:Koodi2`)) %>%  select(CodeId)
b <- icd10fi_extended_by_group %>% filter(CodeId == "H36.00*")
b$CodeId[1] = a
b <- b %>%  unnest(CodeId)
icd10fi_extended_by_group <- bind_rows(icd10fi_extended_by_group, b) %>%  distinct()
icd10fi_leaves <- ICD10fi %>%
filter(`A:Lehtisolmu`=="T" & is.na(`A:Yhdistelymerkki`))
icd10fi_extended_by_group <- icd10fi_extended_by_group %>% #slice(1)%>%
mutate(code2 = pmap(list(group_reg, group_reg_ei, group_reg_4merkki),
function(group_reg, group_reg_ei, group_reg_4merkki){
icd10fi_leaves %>% select(CodeId) %>%
filter(str_detect(CodeId, group_reg)) %>%
filter(is.na(group_reg_ei)      | !str_detect(CodeId, group_reg_ei)) %>%
filter(is.na(group_reg_4merkki) |  str_detect(CodeId, group_reg_4merkki)) %>%
rename(CodeId2 = CodeId)
})) %>% unnest(code2)  %>%
mutate(new_CodeId = str_c(CodeId, CodeId2))
icd10fi_extended_by_group
new_icd10fi_extended_by_group <- left_join(icd10fi_extended_by_group,
ICD10fi %>% select(CodeId) %>% rename(new_CodeId = CodeId) %>% mutate(is=TRUE),
by="new_CodeId"
) %>%
filter(is.na(is))
new_icd10fi_extended_by_group
all_codes_tmp <- bind_rows(
ICD10fi %>% rename(CODE1=`A:Koodi1`, CODE2=`A:Koodi2`)  %>%
mutate(orginal=TRUE) %>%
select(CodeId, CODE1, CODE2),
new_icd10fi_extended_by_one_code %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = value) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
new_icd10fi_extended_by_group %>%  rename(CODE1 = CodeId, CodeId = new_CodeId, CODE2 = CodeId2) %>%
mutate(CODE1 = str_extract(CODE1, "[:upper:][:digit:][:digit:]\\.?[:digit:]"), orginal=FALSE) %>%
select(CodeId, CODE1, CODE2, orginal),
)
write_csv(all_codes_tmp, "./ICD10_extended.csv")
freq_icd10fi_finngen <- read_csv("../1_source_codes_freq/freq_ICD10fi_finngen.csv", ) %>% select(-X1)
freq_icd10fi_finngen <- freq_icd10fi_finngen %>%
rename(freq_finngen = n_codes) %>%
mutate(CODE1 = str_replace(CODE1,"\\+|\\*|\\#|\\&", ""), CODE2 = str_replace(CODE2,"\\+|\\*|\\#|\\&", "")) %>%
# if same code sum freqs
group_by(CODE1, CODE2) %>% summarise(freq_finngen=sum(freq_finngen),  n_patients=sum(n_patients)) %>% ungroup()
n_events_finngen <- freq_icd10fi_finngen$freq_finngen %>% sum()
finngen_join <- left_join(freq_icd10fi_finngen,
all_codes_tmp %>% mutate(is=TRUE, CODE1=str_replace(CODE1, "\\.", ""), CODE2=str_replace(CODE2, "\\.", ""))
, by = c("CODE1", "CODE2"))
no_finngen_standard <- finngen_join %>% filter(is.na(is)) %>% select(CodeId, CODE1,  CODE2, freq_finngen) %>%
mutate( freq_finngen_per=percent(freq_finngen/n_events_finngen))
no_finngen_standard %>%
filter((CODE1 != CODE2) | (is.na(CODE1)) | (is.na(CODE2)) ) %>%
filter(! (is.na(CODE1) & !is.na(CODE2)) ) %>%
arrange(-freq_finngen)
write_csv(no_finngen_standard, "./finngefreq_finngen_not_in_icd10fi.csv")
all_codes_tmp %>%filter( str_detect(CodeId, "H36.03"))
a
icd10fi_extended_by_group %>%filter( str_detect(CodeId, "H36.03"))
b %>%filter( str_detect(CodeId, "H36.03"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(readxl)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(readxl)
reimb_standard <- read_excel("./KELA_reimburesement_ENG_translations_Tuomo(1).xlsx") %>% filter(!is.na(Code))
freq_reimb_finngen <- read_csv("../1_source_files/freq_reimb_finngen.csv") %>% select(-X1)
